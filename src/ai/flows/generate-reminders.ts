// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Generates smart reminders for users based on their profiles,
 *   routines, essential items, and the current state of tracked items.
 *
 * - generateReminders - A function that handles the reminder generation process.
 * - generateTaskReminders - A function that handles task-based reminder generation.
 */

import { ai } from '@/ai/genkit';
import {
  GenerateRemindersInputSchema,
  GenerateRemindersOutputSchema,
  type GenerateRemindersInput,
  type GenerateRemindersOutput,
  GenerateTaskRemindersInputSchema,
  GenerateTaskRemindersOutputSchema,
  type GenerateTaskRemindersInput,
  type GenerateTaskRemindersOutput,
} from './schemas';

export { type GenerateRemindersInput, type GenerateRemindersOutput, type Reminder, type GenerateTaskRemindersInput, type GenerateTaskRemindersOutput } from './schemas';

export async function generateReminders(
  input: GenerateRemindersInput
): Promise<GenerateRemindersOutput> {
  return generateRemindersFlow(input);
}

export async function generateTaskReminders(
  input: GenerateTaskRemindersInput
): Promise<GenerateTaskRemindersOutput> {
    return generateTaskRemindersFlow(input);
}

const remindersPrompt = ai.definePrompt({
  name: 'generateRemindersPrompt',
  input: { schema: GenerateRemindersInputSchema },
  output: { schema: GenerateRemindersOutputSchema },
  prompt: `You are an AI assistant in a household management app called HomeKeep. Your task is to generate helpful, proactive reminders for users based on their profiles, routines, and the status of their items.

Current Time: {{currentTime}}

Consider the following profiles:
{{#each profiles}}
- **{{name}} ({{role}}):**
  - Routine: {{routine}}
  - Essential Items: {{#join essentials ", "}}{{/join}}
{{/each}}

Here is the current status of all tracked items:
{{#each items}}
- **{{name}} (Owner: {{owner}}):** Status: {{status}}, Last Known Location: {{location}}
{{/each}}

Generate a list of 2-4 reminders. A good reminder is timely, relevant, and actionable.

**CRITICAL RULE: If any item has a status of 'Misplaced', you MUST generate a reminder for that item, urging the owner to find it. This reminder should be the highest priority.**

Examples of good reminders:
- If it's morning and a user is about to leave for work, remind them to check for their essential items.
- If a child has school soon, remind the parent to check if their school bag and lunch box are ready.
- If an item is marked 'Misplaced', create a reminder like "Your [Item Name] is misplaced! Check the [Last Location] to find it."

Generate the response in JSON format according to the GenerateRemindersOutputSchema.
`,
});

const taskRemindersPrompt = ai.definePrompt({
    name: 'generateTaskRemindersPrompt',
    input: { schema: GenerateTaskRemindersInputSchema },
    output: { schema: GenerateTaskRemindersOutputSchema },
    prompt: `You are an AI assistant in a household management app called HomeKeep. Your task is to generate a helpful, proactive reminder for a user about a specific task.

Current Time: {{currentTime}}

User Profile:
- **{{profile.name}} ({{profile.role}}):**
  - Routine: {{profile.routine}}

Task to Remind:
- **Title:** {{task.title}}
- **Description:** {{task.description}}
- **Required Items:**
  {{#each task.items}}
  - {{name}} (Last known location: {{lookup ../items name 'location'}})
  {{/each}}

Generate a single, clear, and actionable reminder for the user to complete the task. The reminder should mention the required items and their last known locations to be helpful.

Example: "Time to review homework, {{profile.name}}. Your notes are in the Study Room."

Generate the response in JSON format according to the GenerateRemindersOutputSchema. The output should contain a single reminder.
`,
});

const generateRemindersFlow = ai.defineFlow(
  {
    name: 'generateRemindersFlow',
    inputSchema: GenerateRemindersInputSchema,
    outputSchema: GenerateRemindersOutputSchema,
  },
  async (input) => {
    const { output } = await remindersPrompt(input);
    return output!;
  }
);

const generateTaskRemindersFlow = ai.defineFlow(
    {
      name: 'generateTaskRemindersFlow',
      inputSchema: GenerateTaskRemindersInputSchema,
      outputSchema: GenerateTaskRemindersOutputSchema,
    },
    async (input) => {
      const { output } = await taskRemindersPrompt(input);
      return output!;
    }
);
